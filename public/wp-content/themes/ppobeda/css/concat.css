/*! Pushy - v1.1.0 - 2017-1-30
* Pushy is a responsive off-canvas navigation menu using CSS transforms & transitions.
* https://github.com/christophery/pushy/
* by Christopher Yee */
/* Menu Appearance */
@import url("https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700|Roboto:300,400,700&display=swap&subset=cyrillic");
.pushy {
  position: fixed;
  width: 200px;
  height: 100%;
  top: 0;
  z-index: 9999;
  background: #191918;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  /* enables momentum scrolling in iOS overflow elements */ }
  .pushy a {
    display: block;
    color: #b3b3b1;
    padding: 15px 30px;
    text-decoration: none; }
  .pushy a:hover {
    color: #FFF; }
  .pushy ul:first-child {
    margin-top: 10px; }
  .pushy.pushy-left {
    left: 0; }
  .pushy.pushy-right {
    right: 0; }

.pushy-content {
  visibility: hidden; }

/* Menu Movement */
.pushy-left {
  transform: translate3d(-200px, 0, 0); }

.pushy-open-left #container,
.pushy-open-left .push {
  transform: translate3d(200px, 0, 0); }

.pushy-right {
  transform: translate3d(200px, 0, 0); }

.pushy-open-right #container,
.pushy-open-right .push {
  transform: translate3d(-200px, 0, 0); }

.pushy-open-left .pushy,
.pushy-open-right .pushy {
  transform: translate3d(0, 0, 0); }

.pushy-open-left .pushy-content,
.pushy-open-right .pushy-content {
  visibility: visible; }

/* Menu Transitions */
#container,
.pushy,
.push {
  transition: transform 0.2s cubic-bezier(0.16, 0.68, 0.43, 0.99); }

.pushy-content {
  transition: visibility 0.2s cubic-bezier(0.16, 0.68, 0.43, 0.99); }

/* Site Overlay */
.site-overlay {
  display: none; }

.pushy-open-left .site-overlay,
.pushy-open-right .site-overlay {
  display: block;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 9998;
  background-color: rgba(0, 0, 0, 0.5);
  -webkit-animation: fade 500ms;
  animation: fade 500ms; }

@keyframes fade {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@-webkit-keyframes fade {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

/* Submenu Appearance */
.pushy-submenu {
  /* Submenu Buttons */
  /* Submenu Icon */ }
  .pushy-submenu ul {
    padding-left: 15px;
    transition: max-height 0.2s ease-in-out, visibility 0.2s ease-in-out; }
    .pushy-submenu ul .pushy-link {
      transition: opacity 0.2s ease-in-out; }
  .pushy-submenu button {
    width: 100%;
    color: #b3b3b1;
    padding: 15px 30px;
    text-align: left;
    background: transparent;
    border: 0; }
    .pushy-submenu button:hover {
      color: #FFF; }
  .pushy-submenu > a,
  .pushy-submenu > button {
    position: relative; }
  .pushy-submenu > a::after,
  .pushy-submenu > button::after {
    content: '';
    display: block;
    height: 11px;
    width: 8px;
    position: absolute;
    top: 50%;
    right: 15px;
    background: url("../img/arrow.svg") no-repeat;
    transform: translateY(-50%);
    transition: transform 0.2s; }

/* Submenu Movement */
.pushy-submenu-closed ul {
  max-height: 0;
  overflow: hidden;
  visibility: hidden; }

.pushy-submenu-closed .pushy-link {
  opacity: 0; }

.pushy-submenu-open {
  /* Submenu Icon */ }
  .pushy-submenu-open ul {
    max-height: 1000px;
    visibility: visible; }
  .pushy-submenu-open .pushy-link {
    opacity: 1; }
  .pushy-submenu-open a::after,
  .pushy-submenu-open button::after {
    transform: translateY(-50%) rotate(90deg); }

img {
  max-width: 100%; }

* {
  font-family: 'Roboto', sans-serif; }

h1, h2, h3, h4, h5, h6 {
  text-transform: uppercase;
  font-family: 'Roboto Condensed', sans-serif;
  line-height: 1.4;
  font-weight: bold; }
  h1 *, h2 *, h3 *, h4 *, h5 *, h6 * {
    font-family: inherit; }

h1 {
  margin-bottom: 30px; }

h2 {
  margin-top: 30px;
  margin-bottom: 15px; }

h4 {
  margin-bottom: 15px; }

div, p, li {
  font-size: 18px;
  font-weight: 300; }

ul li a {
  color: #363636;
  font-weight: 300; }

.breadcrumb-item {
  font-size: 14px; }
  .breadcrumb-item a {
    color: #363636; }

main {
  padding-top: 36px; }

header a {
  color: #363636; }
  header a:hover {
    color: #363636; }

header div, header p, header li {
  font-size: 18px;
  font-weight: 400; }

header #toggle-button {
  background: #363636;
  padding: 5px; }

header .menu-btn {
  background: none;
  border: none;
  color: white; }

header .logo-pre {
  font-size: 20px; }

header .header_bottom_hr {
  margin: 20px 0 35px; }

header address {
  margin-bottom: 5px; }
  header address a {
    color: #363636;
    font-size: 15px; }

header .phone, header .email {
  color: #363636;
  font-weight: bold; }

header .top_menu {
  display: flex;
  justify-content: space-between; }
  header .top_menu .menu-item.current_page_item a {
    color: grey; }
    header .top_menu .menu-item.current_page_item a:hover {
      text-decoration: none; }
  header .top_menu .nav-link {
    color: #363636;
    font-weight: bold;
    font-size: 16px;
    padding: .9rem .1rem 0;
    text-transform: uppercase;
    text-decoration: none; }
    header .top_menu .nav-link:hover {
      text-decoration: underline; }

#sidebar .navbar {
  padding: 0; }

#menu-aside {
  flex-direction: column; }

.table-bordered th {
  font-size: 14px; }

.table-bordered td {
  font-size: 12px; }

.btn-link {
  font-size: 18px;
  color: #363636; }

.sub-menu {
  display: none; }

.current-page-parent .sub-menu, .current_page_item .sub-menu {
  display: block; }

.current_page_item > a {
  font-weight: bold;
  text-decoration: underline; }

footer a {
  color: #363636; }
  footer a:hover {
    text-decoration: underline; }

footer hr {
  margin: 20px 0; }

footer .copyright {
  font-size: 12px; }

.send-order-result {
  display: none; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
